{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helper.js","index.js"],"names":["Square","value","onClick","style","className","Board","squares","map","square","i","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","xO","historyPoint","slice","current","_step","move","destination","step","ReactDom","render","document","getElementById"],"mappings":"+LAYeA,EAVA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACfC,EAAQF,EAAK,kBAAcA,GAAd,UAEnB,OACI,wBAAQG,UAAaD,EAAOD,QAAWA,EAAvC,SACKD,KCKEI,EATD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASJ,EAAZ,EAAYA,QAAZ,OACV,qBAAKE,UAAY,QAAjB,SACKE,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,cAAC,EAAD,CAAgBR,MAAOO,EAAQN,QAAS,kBAAMA,EAAQO,KAAzCA,SCgDVC,EAlDF,WACT,MAA8BC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QAAtD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,ECRH,SAAyBd,GAW5B,IAVA,IAAMe,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACnC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GAClE,OAAOnB,EAAQiB,GAGvB,OAAO,KDTQG,CAAgBZ,EAAQE,IACjCW,EAAKT,EAAU,IAAM,IA8B3B,OACI,qCACI,gEACA,cAAC,EAAD,CAAOZ,QAAUQ,EAAQE,GAAad,QA/B1B,SAACO,GACjB,IAAMmB,EAAed,EAAQe,MAAM,EAAGb,EAAa,GAC7Cc,EAAUF,EAAaZ,GACvBV,EAAO,YAAOwB,GAEhBV,GAAUd,EAAQG,KAEtBH,EAAQG,GAAKkB,EACbZ,EAAW,GAAD,mBAAKa,GAAL,CAAmBtB,KAC7BW,EAAcW,EAAaN,QAC3BH,GAAYD,OAsBR,sBAAKd,UAAY,eAAjB,UACI,gCACI,yCAfZU,EAAQP,KAAI,SAACwB,EAAOC,GAChB,IAAMC,EAAcD,EAAI,sBAAkBA,GAAS,cACnD,OACI,6BACI,wBAAQ9B,QAAS,kBAT7Be,EADYiB,EAU8BF,QAR1Cb,EAAWe,EAAO,IAAM,GAFb,IAACA,GAUA,SAAsCD,KAD/BD,SAeX,6BAAKZ,EAAS,WAAaA,EAAS,gBAAkBO,WE3CtEQ,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.0a8cc072.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Square = ({ value, onClick }) => {\n    const style = value ? `squares ${value}` : `squares`;\n\n    return (\n        <button className = {style} onClick = {onClick}>\n            {value}\n        </button>\n    )\n}\n\nexport default Square;","import React from \"react\";\nimport Square from \"./Square\";\n\nconst Board = ({ squares, onClick }) => (\n    <div className = \"board\">\n        {squares.map((square, i) => (\n            <Square key={i} value={square} onClick={() => onClick(i)} />\n\n        ))}\n    </div>\n);\n\nexport default Board;","import React, {useState} from \"react\";\nimport { calculateWinner } from \"../helper\";\nimport Board from \"./Board\";\n\nconst Game = () => {\n    const [history, setHistory] = useState([Array(9).fill(null)]);\n    const [stepNumber, setStepNumber] = useState(0);\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(history[stepNumber]);\n    const xO = xIsNext ? \"X\" : \"O\";\n\n    const handleClick = (i) => {\n        const historyPoint = history.slice(0, stepNumber + 1 );\n        const current = historyPoint[stepNumber];\n        const squares = [...current];\n        // return if won or occupied\n        if (winner || squares[i]) return;\n        // select squares\n        squares[i] = xO;\n        setHistory([...historyPoint, squares]);\n        setStepNumber(historyPoint.length);\n        setXisNext(!xIsNext);\n    };\n\n    const jumpTo = (step) => {\n        setStepNumber(step);\n        setXisNext(step % 2 === 0);\n    };\n\n    const renderMoves = () =>\n        history.map((_step, move) => {\n            const destination = move ? `Go to move #${move}` : \"Go to start\";\n            return (\n                <li key = {move}>\n                    <button onClick={() => jumpTo(move)}>{destination}</button>\n                </li>\n            );\n        });\n\n    return (\n        <>\n            <h1>React Tic Tac Toe - with Hooks</h1>\n            <Board squares ={history[stepNumber]} onClick={handleClick} />\n            <div className = \"info-wrapper\">\n                <div>\n                    <h3>History</h3>\n                    {renderMoves()}\n                </div>\n                <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\n            </div>\n        </>\n    );\n};\n\nexport default Game;","export function calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nReactDom.render(<Game />, document.getElementById(\"root\"));"],"sourceRoot":""}